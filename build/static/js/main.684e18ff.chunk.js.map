{"version":3,"sources":["components/ListItem.js","components/App.js","redux/actions/index.js","index.js","helpers/localStorage.js","redux/reducers/index.js"],"names":["ListItem","state","isEditingMode","inputValue","_this","props","text","onChecked","e","onUpdateClick","isDone","target","checked","onInputChange","setState","value","onSaveClicked","onRemoveClicked","window","confirm","onRemoveClick","_this2","this","react_default","a","createElement","className","type","defaultChecked","onChange","Fragment","onClick","index_es","icon","faSave","faEdit","faTrash","Component","App","addItem","event","preventDefault","items","length","map","item","ListItem_ListItem","key","id","removeItem","changes","updateItem","Object","objectSpread","onSubmit","placeholder","PureComponent","connect","_ref","dispatch","itemText","payload","uuid","itemId","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","prevState","arguments","undefined","action","toConsumableArray","concat","filter","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.684e18ff.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './ListItem.sass';\n\n\nexport default class ListItem extends Component {\n  state = {\n    isEditingMode: false,\n    inputValue: this.props.text\n  };\n\n  onChecked = (e) => {\n    this.props.onUpdateClick({isDone: e.target.checked})\n  };\n\n  onInputChange = (e) => {\n    this.setState({inputValue: e.target.value})\n  };\n\n  onSaveClicked = () => {\n    this.setState({isEditingMode: false});\n    if (this.state.inputValue) {\n      this.props.onUpdateClick({text: this.state.inputValue});\n    }\n  };\n\n  onRemoveClicked = () => {\n    const res = window.confirm(\"Are you sure?\")\n\n    if (res) {\n      this.props.onRemoveClick();\n    }\n  };\n\n  render() {\n    return (\n      <div className='listItem'>\n        <input type=\"checkbox\" defaultChecked={this.props.isDone} onChange={this.onChecked}/>\n        {this.state.isEditingMode ?\n          <>\n            <input className=\"editTextInput\" type=\"text\" value={this.state.inputValue} onChange={this.onInputChange}/>\n            <button onClick={this.onSaveClicked}>\n              <FontAwesomeIcon icon={faSave} />\n            </button>\n          </>\n          :\n          <>\n            <p>{this.props.text}</p>\n            <button onClick={() => this.setState({isEditingMode: true})}>\n              <FontAwesomeIcon icon={faEdit} />\n            </button>\n            <button onClick={this.onRemoveClicked}>\n              <FontAwesomeIcon icon={faTrash} />\n            </button>\n          </>\n        }\n      </div>\n    )\n  }\n}","import React, {PureComponent} from \"react\"\nimport {connect} from \"react-redux\"\nimport ListItem from \"./ListItem\"\nimport {addItem, removeItem, updateItem} from \"../redux/actions\"\nimport \"./App.sass\"\n\nclass App extends PureComponent {\n  state = {\n    inputValue: ''\n  };\n\n  addItem = (event) => {\n    event.preventDefault();\n\n    this.props.addItem(this.state.inputValue)\n    this.setState({\n      inputValue: ''\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.props.items.length ?\n          <div className=\"list\">\n            {this.props.items.map(item =>\n              <ListItem\n                key={item.id}\n                text={item.text}\n                isDone={item.isDone}\n                onRemoveClick={() => this.props.removeItem(item.id)}\n                onUpdateClick={(changes) => this.props.updateItem({...item, ...changes})}\n              />\n            )\n            }\n          </div>\n          :\n          <h3>Nothing here so far :(</h3>\n        }\n\n        <form onSubmit={this.addItem}>\n          <input\n            type=\"text\"\n            placeholder=\"Item text\"\n            value={this.state.inputValue}\n            onChange={(e) => this.setState({inputValue: e.target.value})}\n          />\n          <button>Add</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({items}) => ({items});\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (itemText) => {\n    dispatch(addItem(itemText))\n  },\n  removeItem: (itemId) => {\n    dispatch(removeItem(itemId))\n  },\n  updateItem: (item) => {\n    dispatch(updateItem(item))\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import uuid from \"uuid\"\n\nexport const addItem = (itemText) => (\n  {\n    type: 'ADD_ITEM',\n    payload: {\n      id: uuid(),\n      text: itemText,\n      isDone: false\n    }\n  }\n);\n\nexport const removeItem = (itemId) => (\n  {\n    type: 'REMOVE_ITEM',\n    payload: {\n      itemId\n    }\n  }\n);\n\nexport const updateItem = (item) => (\n  {\n    type: 'UPDATE_ITEM',\n    payload: {\n      item\n    }\n  }\n);","import React from \"react\"\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport mainReducer from \"./redux/reducers\"\nimport { saveState, loadState } from './helpers/localStorage'\nimport \"reset-css\"\n\nconst persistedState = loadState();\nconst store = createStore(mainReducer, persistedState);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n\n  }\n};","export default (prevState = {}, action) => {\n  const { payload } = action;\n  const { items } = prevState;\n\n  switch(action.type) {\n    case 'ADD_ITEM':\n      return {items: [...items, payload]};\n\n    case 'REMOVE_ITEM':\n      return {items: items.filter(item => item.id !== payload.itemId)};\n\n    case 'UPDATE_ITEM':\n      return {items: items.map(item => ((item.id === payload.item.id) ? {...item, ...payload.item} : item))};\n\n    default:\n      return prevState\n  }\n}"],"sourceRoot":""}